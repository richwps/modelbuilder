package de.hsos.richwps.mb.app.view.dialogs.components.inputforms;

import de.hsos.richwps.mb.richWPS.entity.impl.descriptions.OutputBoundingBoxDataDescription;
import java.util.List;

/**
 * Shows title & abstract of BBOutput and allows selection of type.
 *
 * @author caduevel
 * @version 0.0.2
 */
public class OutputBBoxForm extends javax.swing.JPanel {

    private final OutputBoundingBoxDataDescription description;

    private final String id;

    /**
     * Creates new form OutputsParamPanel
     *
     * @param description
     */
    public OutputBBoxForm(
            final OutputBoundingBoxDataDescription description) {
        initComponents();
        this.description = description;

        //SupportedComplexDataType type = description.getComplexOutput();
        String theidentifier = description.getIdentifier();
        String theabstract = description.getAbstract();
        String thetitel = description.getTitle();

        this.selectType.removeAllItems();

        List<String> suppCRS = description.getSupportedCRS();
        String defaultCRS = description.getDefaultCRS();

        //Fill combobox, select defaultCRS
        boolean defaultInSupported = false;
        for (String type : suppCRS) {
            if (type != null && !type.equals("")) {
                this.selectType.addItem(type);
                if (type.equals(defaultCRS)) {
                    defaultInSupported = true;
                    this.selectType.setSelectedItem(type);
                }
            }
        }
        if (!defaultInSupported) {
            this.selectType.addItem(defaultCRS);
            this.selectType.setSelectedItem(defaultCRS);
        }

        //FIXME
        this.id = theidentifier;
        //this.identifier.setText(theidentifier);

        //this.setBorder(new TitledBorder(theidentifier));
        this.titleValue.setText(thetitel);
        this.abstractValue.setText(theabstract);
    }

    /**
     *
     * @return
     */
    public OutputBoundingBoxDataDescription getDescription() {
        return this.description;
    }

    /**
     *
     * @return
     */
    public boolean isSelected() {
        return this.selectOutput.isSelected();
    }

    public void setSelected() {
        this.selectOutput.setSelected(true);
    }

    public void setUnselected() {
        this.selectOutput.setSelected(false);
    }

    /**
     *
     * @return
     */
    public String getType() {
        return this.selectType.getSelectedItem().toString();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        titleValue = new javax.swing.JTextArea();
        abstractLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        abstractValue = new javax.swing.JTextArea();
        typeLabel = new javax.swing.JLabel();
        selectType = new javax.swing.JComboBox();
        selectOutput = new javax.swing.JCheckBox();

        setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.gray));
        setMinimumSize(new java.awt.Dimension(500, 200));
        setPreferredSize(new java.awt.Dimension(500, 250));
        setRequestFocusEnabled(false);
        setLayout(new java.awt.GridLayout(5, 2, -200, 0));

        titleLabel.setFont(new java.awt.Font("Droid Sans", 1, 12)); // NOI18N
        titleLabel.setText("Title:");
        add(titleLabel);

        titleValue.setEditable(false);
        titleValue.setColumns(20);
        titleValue.setLineWrap(true);
        titleValue.setRows(2);
        titleValue.setText("Lorem ipsum");
        titleValue.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED), javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1)));
        titleValue.setMinimumSize(new java.awt.Dimension(250, 32));
        add(titleValue);

        abstractLabel.setFont(new java.awt.Font("Droid Sans", 1, 12)); // NOI18N
        abstractLabel.setText("Abstract:");
        add(abstractLabel);

        jScrollPane1.setBackground(titleValue.getBackground());
        jScrollPane1.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED), javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1)));

        abstractValue.setEditable(false);
        abstractValue.setBackground(titleValue.getBackground());
        abstractValue.setColumns(20);
        abstractValue.setLineWrap(true);
        abstractValue.setRows(2);
        abstractValue.setText("Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.     Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. Lorem ipsum dolor sit amet,");
        abstractValue.setToolTipText("");
        abstractValue.setBorder(null);
        abstractValue.setMinimumSize(new java.awt.Dimension(250, 32));
        jScrollPane1.setViewportView(abstractValue);

        add(jScrollPane1);

        typeLabel.setFont(new java.awt.Font("Droid Sans", 1, 12)); // NOI18N
        typeLabel.setText("CRS-Type:");
        add(typeLabel);

        selectType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "$supported-crs-types" }));
        selectType.setPreferredSize(new java.awt.Dimension(450, 50));
        add(selectType);

        selectOutput.setText("Select");
        add(selectOutput);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel abstractLabel;
    private javax.swing.JTextArea abstractValue;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JCheckBox selectOutput;
    private javax.swing.JComboBox selectType;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JTextArea titleValue;
    private javax.swing.JLabel typeLabel;
    // End of variables declaration//GEN-END:variables
}
