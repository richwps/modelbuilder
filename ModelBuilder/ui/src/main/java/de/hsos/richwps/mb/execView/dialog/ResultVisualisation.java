package de.hsos.richwps.mb.execView.dialog;

import de.hsos.richwps.mb.richWPS.boundary.RichWPSProvider;
import de.hsos.richwps.mb.richWPS.entity.execute.ExecuteRequestDTO;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JPanel;

/**
 *
 * @author dalcacer
 */
public class ResultVisualisation extends ADialogPanel {

    private List<JPanel> renderers;
    private RichWPSProvider provider;
    private ExecuteRequestDTO dto;

    public ResultVisualisation(RichWPSProvider provider, ExecuteRequestDTO dto) {
        this.provider = provider;
        this.dto = dto;
        this.renderers = new ArrayList<>();
        initComponents();
        this.resultTabbedPane.setVisible(false);
        this.loadingLabel.setVisible(true);
    }

    /**
     *
     */
    public void executeProcess() {
        this.loadingLabel.setVisible(false);

        this.dto = this.provider.executeProcess(this.dto);

        /*for (JPanel pan : this.renderers) {
         this.resultTabbedPane.add(pan);
         }*/
        this.resultTabbedPane.setVisible(true);

    }

    @Override
    public void updateDTO() {
        throw new UnsupportedOperationException("Unnecessary.");
    }

    @Override
    public ExecuteRequestDTO getDTO() {
        throw new UnsupportedOperationException("Unnecessary.");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        resultTabbedPane = new javax.swing.JTabbedPane();
        loadingLabel = new javax.swing.JLabel();

        setLayout(new java.awt.GridBagLayout());

        resultTabbedPane.setPreferredSize(new java.awt.Dimension(700, 400));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(resultTabbedPane, gridBagConstraints);

        loadingLabel.setFont(new java.awt.Font("Droid Sans", 1, 12)); // NOI18N
        loadingLabel.setText("Loading");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(loadingLabel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel loadingLabel;
    private javax.swing.JTabbedPane resultTabbedPane;
    // End of variables declaration//GEN-END:variables

}
